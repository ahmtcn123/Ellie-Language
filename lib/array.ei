import ./Number;
import ./Enumerate;

class Array<Type> {

    v elements : Array<Type>;

    fn enumerate() -> Array<Enumerate> {
        v elements : Array<Enumerate> = [];
        v index : integer = 0;
        for data in this.elements {
            elements.push(
                Enumerate {
                    index,
                    data
                }
            )
        }
        return elements;
    }

    fn push(element: Type) {
        this.elements[this.elements.length] = element;
    }

    fn find(filter: (type: Type) > Bool) > Type {
        v found: Type;
        for element in this.elements {
            if filter(element) {
                found = element;
                break;
            }
        }
        return found
    }

    fn findIndex(filter: (type: Type) > Bool) > usize {
        v found: usize = -1;
        for element in this.elements.enumerate() {
            if filter(element.index) {
                found = element.element;
                break;
            }
        }
        return found
    }

    fn removeAt(index: usize) > bool {
        v found = false;
        v fixed: Array<Type> = [];

        for element in this.elements.enumerate() {
            if element.index != index {
                fixed.push(element.data);
            } else {
                found = true;
            }
        }
        this.elements = fixed;
        return found;
    }

    fn pop() {
        v found = false;
        v fixed: Array<Type> = [];

        for element in this.elements.enumerate() {
            if element.index != this.elements.length - 1 {
                fixed.push(element.data);
            }
        }
        this.elements = fixed;
    }

    fn shift() {
        v found = false;
        v shifted: Array<Type> = [];

        for element in this.elements.enumerate() {
            if element.index != 0 {
                shifted.push(element.data);
            }
        }
        this.elements = shifted;
    }

    fn reverse() > Array<Type> {
        v reversed: Array<Type> = [];

        for i in this.elements.length..0 {
            reversed.push(this.elements[i]);
        }
        return reversed;
    }

}