v numFun : fn(integer, integer)::integer = @(firstPar: integer, secondPar: integer) > integer => 1;

v numFunExtended : fn(integer, integer)::integer = @(firstPar: integer, secondPar: integer) {
    return 1;
};

v num : integer = 1;

v charVar : char = 't';

pub v firstPar : integer;
v arrayOfNumbers : array(integer, 8) = [1, 2, 3, 4, 5, 6, 7, 8];

v stringVar = "test";

class test {

    co test(parameter: integer) { //Construct module
        self.firstPar = 3;
        self.secondPar = 4;
        self.thirdPar = 5;
    }


    pub v secondPar : i16;
    pri v thirdPar : i64;

    set fourthPar = @(parameter: integer) => firstPar = parameter + 3;
    get fourthPar = @() > integer => firstPar + 3;
}